
package view;

import Response.ClientIdentity;
import java.io.*;
import java.net.Socket;
import javax.swing.*;
import java.awt.*;
import Kandidat.Kandidat;
import java.awt.event.ActionEvent;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author HP
 */
public class Voter2 extends javax.swing.JFrame {
    Kandidat[] listKandidat;
    JPanel pnlVoteColl;
    ClientIdentity voterIdentity;
    Socket connection;
    ObjectInputStream fromServer;
    ObjectOutputStream toServer;
    
    /**
     * Creates new form Voter2
     * @param nama
     * @param identity
     * @param connection
     * @param fromServer
     * @param toServer
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public Voter2(String nama, 
            ClientIdentity identity, 
            Socket connection, 
            ObjectInputStream fromServer, 
            ObjectOutputStream toServer){
        
        this.voterIdentity = identity;
        this.connection = connection;
        this.fromServer = fromServer;
        this.toServer = toServer;
        
        //Show Form
        showForm();
        jLabel1.setText(nama);
        jLabel2.setText(String.valueOf(this.voterIdentity.getId()));
        
        //Fetch kandidat data from server
        EventQueue.invokeLater(() -> {
            try {
                this.listKandidat = (Kandidat[]) fromServer.readObject();
                constructComp();
                jScrollPane1.setViewportView(this.pnlVoteColl);
            }catch (IOException | ClassNotFoundException ex) {
                Logger.getLogger(Voter2.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    
    public void showForm(){
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
    public void constructComp(){
        this.pnlVoteColl = new JPanel();
        this.pnlVoteColl.setLayout(new BoxLayout(this.pnlVoteColl, BoxLayout.Y_AXIS));
        
        if(this.listKandidat != null){
            for(Kandidat calon : this.listKandidat){
                int idCalon = calon.getId();
                String namaCalon = calon.getNama();
                
                JPanel pnl_vote = new JPanel();
                pnl_vote.setSize(384, 14);
                pnl_vote.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.LIGHT_GRAY));
                GridBagLayout gridbag = new GridBagLayout();
                GridBagConstraints cons = new GridBagConstraints();
                pnl_vote.setLayout(gridbag);
                
                JButton btn_vote = new JButton("Vote");
                btn_vote.addActionListener((ActionEvent e) -> {
                    try {
                        this.toServer.writeInt(idCalon);
                        
                        showVoter3(namaCalon);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(rootPane, 
                            "Your vote request was failed", 
                            "Request Failed", 
                            JOptionPane.ERROR_MESSAGE);
                    }
                });
                
                cons.gridwidth = GridBagConstraints.RELATIVE;
                cons.weightx = 2.0;
                JLabel lbl_nama = new JLabel(namaCalon);
                gridbag.setConstraints(lbl_nama, cons);
                pnl_vote.add(lbl_nama);
                
                cons.gridwidth = GridBagConstraints.REMAINDER;
                cons.weightx = 1.0;
                gridbag.setConstraints(btn_vote, cons);
                pnl_vote.add(btn_vote);
                
                this.pnlVoteColl.add(pnl_vote);
            }
        }
    }
    
    public void showVoter3(String namaCalon){
        //Mematikan windows yang aktif
        dispose();

        //Menampilkan jframe voter3
        new Voter3(namaCalon, 
                   this.connection,
                   this.fromServer,
                   this.toServer);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nama Voter");

        jLabel2.setText("ID Voter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Voter2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Voter2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Voter2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Voter2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
