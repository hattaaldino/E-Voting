/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Response.ClientIdentity;
import java.net.Socket;
import java.io.*;
import javax.swing.JOptionPane;
import java.util.Scanner;
/**
 *
 * @author HP
 */
public class Voter extends javax.swing.JFrame {
    String nama;
    int id;
    
    ClientIdentity voterIdentity;
    Socket connection;
    ObjectInputStream fromServer;
    ObjectOutputStream toServer;
    
    Scanner fileReader;
    BufferedWriter fileWriter;
    /**
     * Creates new form Voter
     */
    
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public Voter() {
       initComponents();
       this.setLocationRelativeTo(null);
        try {
            //scan files
            this.fileReader =  new Scanner(new File ("src\\id.txt"));

            //trigger action if the voter already registered
            if(!readFileID("id").equals("")){
                this.id = Integer.parseInt(readFileID("id"));
                this.voterIdentity = new ClientIdentity("voter", this.id);
                makeConnection();
                
                if(canVote()){
                    this.nama = readFileID("nama");
                    showVoter2();
                }
                else{
                    //Show error dialog about disallow access to vote
                    JOptionPane.showMessageDialog(rootPane, 
                            "You already voted", 
                            "Cannot Vote", 
                            JOptionPane.ERROR_MESSAGE);

                    //Terminating JVM
                    System.exit(0);
                }
            }
            //trigger action if the voter not registered yet
            else{
                this.voterIdentity = new ClientIdentity("voter", -1);
                makeConnection();
                
                this.id = this.fromServer.readInt();
                this.voterIdentity.setId(this.id);
                
                this.fileWriter = new BufferedWriter(new FileWriter("src\\id.txt"));
                fileWriter.write(String.valueOf(this.id));
                fileWriter.newLine();
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(rootPane, 
                    "We cannot access your information data, please restart the program", 
                    "File Access Failed", 
                    JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            terminateSystem();
        }
    }
    
    //if flag=0 then this will return the id and if flag=1 then this will return the name
    public String readFileID(String flag){
        String data = "";
        
        if(flag.equals("id")){
            while (this.fileReader.hasNextLine()){
                data = this.fileReader.nextLine();
                break;
            }
        }
        else if (flag.equals("nama")){
            while (this.fileReader.hasNextLine()){
                data = this.fileReader.nextLine();
            }
        }
        
        return data;
    }
    
    public boolean canVote() throws IOException{
        return this.fromServer.readBoolean();
    }
    
    public void makeConnection() throws IOException{
        this.connection = new Socket("127.0.0.1", 50100);
        this.toServer = new ObjectOutputStream(connection.getOutputStream());
        this.fromServer = new ObjectInputStream(connection.getInputStream());

        //Mengirimkan voterIdentity ke server
        toServer.writeObject(voterIdentity);
    }
    
    //Terminate system if connection problem occurs
    public void terminateSystem(){
        //Show error dialog about inablitiy to access server
        JOptionPane.showMessageDialog(rootPane, 
                "Can't connect to server! Please check your internet connection or try to restart the program", 
                "Connection Failed", 
                JOptionPane.ERROR_MESSAGE);

        //Terminating JVM
        System.exit(0);
    }
    
    public void showVoter2(){
        //Mematikan windows yang aktif
        dispose();

        //Menampilkan jframe voter2
        new Voter2(this.nama, 
                   this.voterIdentity, 
                   this.connection,
                   this.fromServer,
                   this.toServer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Masukkan Nama Anda");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel2)))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!jTextField1.getText().equals("")){
            try {
                this.nama = jTextField1.getText();
                this.fileWriter.write(this.nama);
                this.fileWriter.flush();
                
                //Close file stream
                this.fileReader.close();
                this.fileWriter.close();
                
                showVoter2();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, 
                    "We cannot access your information data, please restart the program", 
                    "File Access Failed", 
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Voter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Voter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Voter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Voter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Voter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
